{
    "swagger": "2.0",
    "info": {
        "description": "This is FundooNotes api",
        "version": "1.0.0",
        "title": "FundoNotes",
        "email": "sampleEmail",
        "host": "localhost:2001",
        "basePath": "/"
    },
    "tags": [{
        "name": "FundooNotes",
        "description": "Everything about FundooNotes"
    }],
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/notes/": {
            "get": {
                "tags": [
                    "FundooNotes"
                ],
                "summary": "retrive all notes",
                "description": "retrive all notes",
                "parameters": [{
                    "name": "token",
                    "in": "header",
                    "description": "token"
                }],
                "responses": {
                    "200": {
                        "description": "Note found successfully"
                    },
                    "404": {
                        "description": "Note not found "
                    },
                    "500": {
                        "description": "could not find notes"
                    }
                }
            },
            "post": {
                "tags": [
                    "FundooNotes"
                ],
                "description": "create a new note",
                "summary": "create a note",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [{
                    "name": " Note ",
                    "in": "body",
                    "type": "string",
                    "required": true
                }],
                "responses": {
                    "200": {
                        "description": "Note created successfully",
                        "schema": {
                            "$ref": "#/definitions/Note"
                        }
                    },
                    "400": {
                        "description": "Note cannot be empty"
                    }
                }
            }
        },
        "/notes/{id}": {
            "parameters": [{
                "name": "id",
                "in": "path",
                "required": true,
                "description": "find Note by ID",
                "type": "string"
            }],
            "put": {
                "tags": [
                    "FundooNotes"
                ],
                "summary": "Update an existing Note",
                "description": "find by ID and update",
                "operationId": "updateNote",
                "parameters": [{
                    "name": " Note ",
                    "in": "body",
                    "type": "string",
                    "required": true
                }],
                "responses": {
                    "200": {
                        "description": "Note updated successfully",
                        "schema": {
                            "$ref": "#/definitions/Note"
                        }
                    },
                    "404": {
                        "description": "Note not found "
                    },
                    "500": {
                        "description": "could not find Notes"
                    }
                }
            },
            "delete": {
                "tags": [
                    "FundooNotes"
                ],
                "summary": "Delete a Note",
                "in": "path",
                "description": "delete a Note by its ID",
                "operationId": "deleteNote",
                "responses": {
                    "200": {
                        "description": "Note deleted successfully"
                    },
                    "404": {
                        "description": "Note not found not found"
                    },
                    "500": {
                        "description": "could not delete Note"
                    }
                }
            },
            "get": {
                "tags": [
                    "FundooNotes"
                ],
                "summary": "Get single Note",
                "responses": {
                    "200": {
                        "description": "Note found successfully"
                    }
                }
            }
        },
        "/register/": {
            "post": {
                "tags": [
                    "FundooNotes"
                ],
                "description": "create a new user",
                "summary": "create a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [{
                    "name": " User",
                    "in": "body",
                    "type": "string",
                    "required": true
                }],
                "responses": {
                    "200": {
                        "description": "user created successfully",
                        "$ref": "#/definitions/UserRegistration"
                    },
                    "400": {
                        "description": "user information cannot be empty"
                    }
                }
            }
        },
        "/login/": {
            "parameters": [{
                "name": " User",
                "in": "body",
                "type": "string",
                "required": true
            }],
            "post": {
                "tags": [
                    "FundooNotes"
                ],
                "summary": "Get single user",
                "responses": {
                    "200": {
                        "description": "user login successfully",
                        "$ref": "#/definitions/UserLogin"
                    }
                }
            }
        },
        "/forgotpassword/": {
            "parameters": [{
                "name": " User",
                "in": "body",
                "type": "string",
                "required": true
            }],
            "post": {
                "tags": [
                    "FundooNotes"
                ],
                "summary": "Get reset password mail",
                "responses": {
                    "200": {
                        "description": "reset mail sent successfully",
                        "$ref": "#/definitions/ForgotPassword"
                    }
                }
            }
        },
        "/resetpassword": {
            "parameters": [{
                "name": "token",
                "in": "header",
                "description": "reset password"
            }],
            "put": {
                "tags": [
                    "FundooNotes"
                ],
                "summary": "reset password",
                "description": "set new password",
                "operationId": "updatePassword",
                "parameters": [{
                    "name": " new password ",
                    "in": "body",
                    "type": "string",
                    "required": true
                }],
                "responses": {
                    "200": {
                        "description": "Password updated successfully",
                        "$ref": "#/definitions/ResetPassword"
                    },
                    "404": {
                        "description": "Password not found "
                    },
                    "500": {
                        "description": "could not find user"
                    }
                }
            }
        },
        "/labels/": {
            "get": {
                "tags": [
                    "FundooNotes"
                ],
                "summary": "retrive all label",
                "description": "retrive all label",
                "responses": {
                    "200": {
                        "description": "label found successfully"
                    },
                    "404": {
                        "description": "label not found "
                    },
                    "500": {
                        "description": "could not find label"
                    }
                }
            },
            "post": {
                "tags": [
                    "FundooNotes"
                ],
                "description": "create a new label",
                "summary": "create a label",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [{
                    "name": " label ",
                    "in": "body",
                    "type": "string",
                    "required": true
                }],
                "responses": {
                    "200": {
                        "description": "label created successfully",
                        "schema": {
                            "$ref": "#/definitions/label"
                        }
                    },
                    "400": {
                        "description": "label cannot be empty"
                    }
                }
            }
        },
        "/labels/{id}": {
            "parameters": [{
                "name": "id",
                "in": "path",
                "required": true,
                "description": "find label by ID",
                "type": "string"
            }],
            "put": {
                "tags": [
                    "FundooNotes"
                ],
                "summary": "Update an existing label",
                "description": "find by ID and update",
                "operationId": "updatelabel",
                "parameters": [{
                    "name": " label ",
                    "in": "body",
                    "type": "string",
                    "required": true
                }],
                "responses": {
                    "200": {
                        "description": "label updated successfully"
                    },
                    "404": {
                        "description": "label not found "
                    },
                    "500": {
                        "description": "could not find label"
                    }
                }
            },
            "delete": {
                "tags": [
                    "FundooNotes"
                ],
                "summary": "Delete a label",
                "in": "path",
                "description": "delete a label by its ID",
                "operationId": "deletelabel",
                "responses": {
                    "200": {
                        "description": "label deleted successfully"
                    },
                    "404": {
                        "description": "label not found not found"
                    },
                    "500": {
                        "description": "could not delete label"
                    }
                }
            },
            "get": {
                "tags": [
                    "FundooNotes"
                ],
                "summary": "Get single label",
                "parameters": [{
                    "name": " label ",
                    "in": "body",
                    "type": "string",
                    "required": true
                }],
                "responses": {
                    "200": {
                        "description": "label found successfully"
                    }
                }
            }
        },
        "/addlabeltonote/{id}": {
            "parameters": [{
                "name": "id",
                "in": "path",
                "required": true,
                "description": "ID of the note to which label will be addide",
                "type": "string"
            }],
            "put": {
                "tags": [
                    "Notes"
                ],
                "summary": "Add Labels to Note",
                "parameters": [{
                    "name": "LabelId",
                    "in": "body",
                    "description": "Adding Labels to Note",
                    "schema": {
                        "$ref": "#/definitions/addlabeltonote"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Label is added to note",
                        "schema": {
                            "$ref": "#/definitions/addlabeltonote"
                        }
                    }
                }
            }
        },
        "/removelabelfromnote/{id}": {
            "parameters": [{
                "name": "id",
                "in": "path",
                "required": true,
                "description": "ID of the note to which label will be addide",
                "type": "string"
            }],
            "put": {
                "tags": [
                    "Notes"
                ],
                "summary": "Remove Label from Note",
                "parameters": [{
                    "name": "labelId",
                    "in": "body",
                    "description": "Removing Label from Note",
                    "schema": {
                        "$ref": "#/definitions/removelabelfromnote"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Label is removed from note",
                        "schema": {
                            "$ref": "#/definitions/labelsToNote"
                        }
                    }
                }
            }
        },
        "/activateemail": {
            "put": {
                "summary": "Activate account",
                "tags": [
                    "User"
                ],
                "parameters": [{
                    "name": "token",
                    "in": "header",
                    "description": "token"
                }],
                "responses": {
                    "200": {
                        "description": "Account has been activated  !",
                        "schema": {
                            "$ref": "#/definitions/activateemail"
                        }
                    }
                }
            }
        },
        "/addcollaborator": {
            "post": {
                "summary": "Create collaborator",
                "tags": [
                    "Collaborator"
                ],
                "parameters": [{
                    "name": "Collaborator",
                    "in": "body",
                    "description": "Creates collaborator",
                    "schema": {
                        "$ref": "#/definitions/addCollaborator"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully created collaborator",
                        "schema": {
                            "$ref": "#/definitions/note"
                        }
                    }
                }
            }
        },
        "/removecollaborator": {
            "put": {
                "tags": [
                    "Collaborator"
                ],
                "summary": "Delete collaborator with given ID",
                "parameters": [{
                    "name": "collaborator",
                    "in": "body",
                    "description": "Remove collaborator",
                    "schema": {
                        "$ref": "#/definitions/removecollaborator"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successfully removed collaborator from note",
                        "schema": {
                            "$ref": "#/definitions/note"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "registration": {
            "required": [
                "name",
                "emailId",
                "password",
                "confirmPassword"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "emailId": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "confirmPassword": {
                    "type": "string"
                }
            }
        },
        "login": {
            "required": [
                "emailId",
                "password"
            ],
            "properties": {
                "emailId": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "forgotPassword": {
            "required": [
                "emailId"
            ],
            "properties": {
                "emailId": {
                    "type": "string"
                }
            }
        },
        "resetPassword": {
            "required": [
                "token",
                "newPassword",
                "confirmPassword"
            ],
            "properties": {
                "newPassword": {
                    "in": "body",
                    "type": "string"
                },
                "confirmPassword": {
                    "in": "body",
                    "type": "string"
                }
            }
        },
        "note": {
            "required": [
                "title",
                "description"
            ],
            "properties": {
                "title": {
                    "in": "body",
                    "type": "string"
                },
                "description": {
                    "in": "body",
                    "type": "string"
                }
            }
        },
        "notes": {
            "type": "array",
            "$ref": "#/definitions/note"
        },
        "updateNote": {
            "required": [
                "title",
                "description"
            ],
            "properties": {
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "label": {
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "in": "body",
                    "type": "string"
                }
            }
        },
        "labels": {
            "type": "array",
            "$ref": "#/definitions/label"
        },
        "updateLabel": {
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "addlabeltonote": {
            "required": [
                "labelId"
            ],
            "properties": {
                "labelId": {
                    "type": "string"
                }
            }
        },
        "removelabelfromnote": {
            "required": [
                "labelId"
            ],
            "properties": {
                "labelId": {
                    "type": "string"
                }
            }
        },
        "activateAccount": {
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "in": "header",
                    "type": "string"
                }
            }
        },
        "addCollaborator": {
            "required": [
                "noteId",
                "collaboratorId"
            ],
            "properties": {
                "noteId": {
                    "in": "body",
                    "type": "string"
                },
                "userId": {
                    "in": "body",
                    "type": "string"
                }
            }
        },
        "removeCollaborator": {
            "required": [
                "noteId",
                "collaboratorId"
            ],
            "properties": {
                "noteId": {
                    "in": "body",
                    "type": "string"
                },
                "collaboratorId": {
                    "in": "body",
                    "type": "string"
                }
            }
        }
    }
}